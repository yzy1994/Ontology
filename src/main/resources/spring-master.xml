<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		        http://www.springframework.org/schema/aop 
		        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		        http://www.springframework.org/schema/context 
		        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		        http://www.springframework.org/schema/task
				http://www.springframework.org/schema/task/spring-task-3.0.xsd
		         http://www.springframework.org/schema/util
				http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />

	<context:annotation-config />

	<context:property-placeholder location="classpath:db.properties" />

	<!-- 扫描注解Bean -->
	<context:component-scan base-package="com.*" />

	<!--new -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongo" ref="mongo" />
		<constructor-arg name="databaseName" value="${mongo.dbname}" />
	</bean>

	<!-- Factory bean that creates the Mongo instance -->
	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<property name="host" value="${mongo.host}" />
		<property name="port" value="${mongo.port}" />
	</bean>
	<!-- -->



	<util:set id="supportLanguages" set-class="java.util.HashSet">
		<value>zh-cn</value>
		<value>en</value>
	</util:set>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage" value="edu.shu.skytorif.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<bean id="myRealm" class="edu.shu.skytorif.realm.MyRealm" />

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<property name="loginUrl" value="/pages/login/Login.jsp" />
		<property name="successUrl" value="/pages/index.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />

		<property name="filterChainDefinitions">
			<value>
				<!-- /pages/buildont/buildont.jsp=authc,roles[builder] -->
				/pages/drawont/Bont.jsp = authc
				/pages/label/label.jsp = authc
				/pages/drawont/OntoEdit.jsp = authc
			</value>
		</property>
	</bean>

	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor"/> <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager"/> </bean> -->

	<aop:config proxy-target-class="true"></aop:config>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>
